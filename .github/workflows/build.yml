# Note: In a yml each level is padded by 2 spaces
name: Flutter

on:
  # Runs this action when you push on master
  push:
    branches: [ "master" ]
  # Runs this when a PR against master is created
  pull_request:
    branches: [ "master" ]
    #Runs this when the PR is closed
    types: [closed]

jobs:
  flutter_job:

    # The machine, we can also use windows-latest or ubuntu-latest
    # We are choosing macos-latest because we will be also building for iOS
    runs-on: macos-latest

    steps:

      # Clones the project on the machine
      - uses: actions/checkout@v4

      # Install Flutter and related dependency on this machine
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with: 
          channel: 'stable'
          # flutter-version: '3.16.8'
          # ^ If you want to use a specific version of flutter
      
      - name: Install dependencies
        run: flutter pub get
      
      # Checks for Symantic errors. Can be configured using analysis_options.yaml
      # - name: Analyze Project Source
      #   run: flutter analyze --fatal-warnings

      # Runs unit test
      # - name: Run tests
      #   run: flutter test

      # Create android apk
      - name: Build apk
        run: flutter build apk

      #Upload apk to firebase distribution
      - name: Upload APK to Firebase distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-release.apk